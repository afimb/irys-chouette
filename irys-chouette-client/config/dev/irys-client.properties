#Fichier de configuration pour les services SIRI IDF:

#------------------------
#  CLIENT
#------------------------
# Proxy parameters if needed : set name to nothing if no proxy
proxy.name=
proxy.port=8080
proxy.domain=mydomain.net
proxy.user=anonymous
proxy.password=anonymous

#  general parameters
siri.version=1.3
siri.key=test
siri.server=http\://localhost\:8080/chouette-server
siri.requestorRef=myName
# if server needs http authentification (leave empty if not)
siri.authUser=
siri.authPass=
# allow use of getMultipleStopMonitoring calls
siri.isMultipleStopMonitoredSupported=true
# tell if Infochannel msut be converted to numeric codes (SNCF for exemple)
siri.isInfoChannelEncoded=false
# compress requests
siri.requestCompression=true
# accept compressed responses
siri.responseCompression=true

# time out SOAP in milliseconds
siri.timeOut=90000

# check XML response syntax
siri.checkResponse=true

# check response xsd validity
siri.checkResponse=true
# CheckStatusService request identifier prefix
siri.checkStatus.requestIdentifierPrefix=CheckStatus:Test:
# GeneralMessageService request identifier prefix
siri.generalMessage.requestIdentifierPrefix=GeneralMessage:Test:
# StopMonitoringService request identifier prefix
siri.stopMonitoring.requestIdentifierPrefix=StopMonitoring:Test:
# VehicleMonitoringService request identifier prefix
siri.vehicleMonitoring.requestIdentifierPrefix=VehicleMonitoring:Test:
# DiscoveryService request identifier prefix
siri.discovery.requestIdentifierPrefix=Discovery:Test:
# DataSupplyService request identifier prefix
siri.dataSupply.requestIdentifierPrefix=DataSupply:Test:
# CapabilitiesService request identifier prefix
siri.capabilities.requestIdentifierPrefix=Capabilities:Test:
# ConnectionMonitoringService request identifier prefix
siri.connectionMonitoring.requestIdentifierPrefix=ConnectionMonitoring:Test:
# ConnectionTimetableService request identifier prefix
siri.connectionTimetable.requestIdentifierPrefix=ConnectionTimetable:Test:
# EstimatedTimetableService request identifier prefix
siri.estimatedTimetable.requestIdentifierPrefix=EstimatedTimetable:Test:
# FacilityMonitoringService request identifier prefix
siri.facilityMonitoring.requestIdentifierPrefix=FacilityMonitoring:Test:
# ProductionTimetableService request identifier prefix
siri.productionTimetable.requestIdentifierPrefix=ProductionTimetable:Test:
# StopTimetableService request identifier prefix
siri.stopTimetable.requestIdentifierPrefix=StopTimetable:Test:
# SituationExchangeService request identifier prefix
siri.situationExchange.requestIdentifierPrefix=SituationExchange:Test:
# SubscriptionService request identifier prefix
siri.subscription.requestIdentifierPrefix=Subscription:Test:
siri.subscription.subscriptionIdentifierPrefix=CLI_DRYADE:Subscription:

# Siri messages trace
# trace mode : NoMessageTrace(default) or FileMessageTrace
siri.trace=FileMessageTrace
# basename for messages files
siri.trace.fileName=messages_siri.txt
# messages directory 
siri.trace.directory=messages
# saving cycle in milliseconds
siri.trace.flushPeriod=5000
# max files to preserve
siri.trace.maximumFileCount=3
# max size for file in byte
siri.trace.maximumFileSize=500000
# date format (dd/MM/yyyy-HH:mm:ss.SSS for exemple)
siri.trace.dateFormat=dd/MM/yyyy-HH:mm:ss.SSS
# message line separator (may be empty)
siri.trace.separator=-------------------------------------------------------------

#------------------------
#       SEQUENCER to emulate subscription on client side
#------------------------
# General subscription simulation parameters
#-------------------------------------------
#period between 2 notifications check (all durations are in milliseconds) 
siri.sequencer.notificationPeriod=1000
# hour/minute in day when to stop subscriptions  (hh:mm)
siri.sequencer.stopTime=02:00
# hour/minute in day when to restart subscriptions  (hh:mm)
siri.sequencer.startTime=05:00

# checkstatus subscription simulation parameters
#-----------------------------------------------
# period between 2 checkstatus requests when server is ok
siri.sequencer.CheckStatus.normalModePeriod=600000
# period between 2 checkstatus requests when server is nok
siri.sequencer.CheckStatus.failureModePeriod=120000
# start of first period in the cycle (-1 = ASAP) 
siri.sequencer.CheckStatus.timeOffset=-1

# stopmonitoring subscription simulation parameters
#-----------------------------------------------
# start of first period in the cycle (-1 = ASAP) 
siri.sequencer.StopMonitoring.timeOffset=0
# period between 2 StopMonitoring requests
siri.sequencer.StopMonitoring.period=20000
# number of packets (packetCount * period = cycle duration) 
siri.sequencer.StopMonitoring.packetCount=1
# minimal size of a packet before packet balancing
siri.sequencer.StopMonitoring.optimalPacketSize=50
# maximumStopVisit for each request
siri.StopMonitoring.maximumStopVisit=3
# minimum expectedTime change before notification
siri.StopMonitoring.changeBeforeUpdateInSeconds=15
# request filter mode : 
#      stoppoint = a subscription for each physical stop (BoardingPosition and Quay) in database 
#      line = a subscription for each couple (physical stop, line) in database 
#      destination = a subscription for each triplet (physical stop, line, destination) in database 
siri.StopMonitoring.queryMode=stoppoint
# restriction on physical stop selection : comment contains value (leave empty for all stops)
siri.StopMonitoring.stopCommentFilter=

# generalmessage subscription simulation parameters
#-----------------------------------------------
# start of first period in the cycle (-1 = ASAP) 
siri.sequencer.GeneralMessage.timeOffset=0
# period between 2 generalMessage requests
siri.sequencer.GeneralMessage.period=30000

# list of available servers
siri.endPoint1.key=KEYONE
siri.endPoint1.requestorRef=TBD
siri.endPoint2.key=
siri.endPoint2.requestorRef=
siri.endPoint3.key=
siri.endPoint3.requestorRef=
siri.endPoint4.key=
siri.endPoint4.requestorRef=
siri.endPoint5.key=
siri.endPoint5.requestorRef=
siri.endPoint6.key=
siri.endPoint6.requestorRef=
siri.endPoint7.key=
siri.endPoint7.requestorRef=
siri.endPoint8.key=
siri.endPoint8.requestorRef=
siri.endPoint9.key=
siri.endPoint9.requestorRef=
siri.endPoint10.key=
siri.endPoint10.requestorRef=

## Gestion des identifiants du referentiel : si false alors referentiel commun
## les trois premiers items sont a passer a false pour un reseau STIF
siri.idWithLoc.Line=true
siri.idWithLoc.Network=true
siri.idWithLoc.Company=true
siri.idWithLoc.JourneyPattern=true
siri.idWithLoc.VehicleJourney=true
siri.idWithLoc.Route=true
siri.idWithLoc.StopPoint.SP=true
siri.idWithLoc.StopPoint.BP=true
siri.idWithLoc.StopPoint.QUAY=true
siri.idWithLoc.StopPoint.SPOR=true
siri.allowedStopPointTypes=SPOR,BP,Q,SP
siri.emptySubtypes=false

# chouette database access
database.name = siri
database.schema = chouette_v2
database.showsql = false
database.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
hibernate.username = siri
hibernate.password = siri
jdbc.url=jdbc:postgresql://localhost:5432/siri
jdbc.driver=org.postgresql.Driver
database.hbm2ddl.auto=update
system.code=MYPREFIX
Lambert.SRID=27572
WGS84.SRID=4326

# reload referential cache on Network's VersionDate change
siri.referential.scanNetworkVersionDate=false
siri.referential.scanPeriod=30 

# SIRI database access
realtime.jdbc.url=jdbc:postgresql://localhost:5432/siri
realtime.jdbc.username=siri
realtime.jdbc.password=siri
realtime.hbm2ddl.auto=update
realtime.showsql=false
realtime.schema=siri
